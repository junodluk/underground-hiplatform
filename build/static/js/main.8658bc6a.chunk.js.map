{"version":3,"sources":["api/api-variables.js","components/search/index.js","components/button/index.js","app.js","utils/string-utils.js","api/oauth.service.js","callback.js","serviceWorker.js","index.js","logo.svg"],"names":["process","__webpack_require__","d","__webpack_exports__","API_URL","CLIENT_ID","REDIRECT_URL","SCOPE","TOKEN_EXCHANGE_SERVER_URL","argv","BABEL_ENV","TRANSITION_TIME","PureSearch","_PureComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","animateOpen","searching","timeout","clearTimeout","setTimeout","setState","animating","handleShowSearch","state","handleHideSearch","handleChange","value","onSearch","inherits","createClass","key","_this$state","className","react_default","a","createElement","cn","es","id","placeholder","search__input--visible","search__input--active","onChange","leftIcon","onClick","icon","PureComponent","defaultProps","Button","_this$props$label","label","Component","App","search","react","colored","fixed","actions","search_PureSearch","title","src","logo","alt","button_Button","console","log","href","target","rel","getUrlParam","variable","vars","window","location","substring","split","i","length","pair","decodeURIComponent","exchangeTokenPromise","code","arguments","undefined","axios","post","concat","then","res","catch","err","Callback","processLoginCallback","Boolean","hostname","match","WebFontLoader","load","google","families","routing","BrowserRouter","basename","Switch","Route","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","p"],"mappings":"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","file":"static/js/main.8658bc6a.chunk.js","sourcesContent":["const API_URL = 'https://accounts.spotify.com/authorize?';\r\nconst CLIENT_ID = '7e9f6aed24064e409fd29975ed84ac2e';\r\nconst SCOPE = 'user-read-private user-read-email';\r\nlet TOKEN_EXCHANGE_SERVER_URL = 'https://spotify-oauth-server.herokuapp.com';\r\n\r\nif (process.argv[2] === 'local')\r\n  TOKEN_EXCHANGE_SERVER_URL = 'http://localhost:4343';\r\n\r\nlet REDIRECT_URL = '';\r\nif (process.env.BABEL_ENV === 'development')\r\n  REDIRECT_URL = 'http://localhost:5000/callback';\r\nelse\r\n  REDIRECT_URL = 'http://localhost:5000/callback'; // TODO: Chage to GitHub Pages link when ready\r\n\r\n\r\nexport { API_URL, CLIENT_ID, REDIRECT_URL, SCOPE, TOKEN_EXCHANGE_SERVER_URL };","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport { TextField, Button, FontIcon } from 'react-md';\r\n\r\nimport './styles.scss';\r\n\r\nconst TRANSITION_TIME = 317; // 300ms for transition and 17 to match up with original CSSTransitionGroup\r\n\r\nexport class PureSearch extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    onSearch: PropTypes.func.isRequired\r\n  };\r\n\r\n  static defaultProps = {\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: '',\r\n      animating: false,\r\n      searching: false\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.timeout) {\r\n      clearTimeout(this.timeout);\r\n    }\r\n  }\r\n\r\n  animateOpen = (searching) => {\r\n    // const { searching } = this.state;\r\n\r\n    if (this.timeout) {\r\n      clearTimeout(this.timeout);\r\n    }\r\n\r\n    if (!searching) {\r\n      this.timeout = setTimeout(() => {\r\n        this.timeout = null;\r\n        this.setState({ animating: false });\r\n      }, TRANSITION_TIME);\r\n      this.setState({ animating: true });\r\n    }\r\n  }\r\n\r\n  handleShowSearch = () => {\r\n    const { searching } = this.state;\r\n    if (!searching) {\r\n      this.setState({ searching: true });\r\n      this.animateOpen(searching);\r\n    }\r\n  };\r\n\r\n  handleHideSearch = () => {\r\n    const { searching } = this.state;\r\n    if (searching) {\r\n      this.setState({ searching: false });\r\n      this.animateOpen(searching);\r\n    }\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    this.props.onSearch(value);\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const { animating, value, searching } = this.state;\r\n    const {\r\n      className,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={cn('search md-grid md-grid--no-spacing', className)}>\r\n        <TextField\r\n          id=\"spotify-search\"\r\n          placeholder=\"Search\"\r\n          className={cn('search__input', {\r\n            'search__input--visible': searching || animating,\r\n            'search__input--active': searching,\r\n          })}\r\n          onChange={this.handleChange}\r\n          leftIcon={<FontIcon>search</FontIcon>}\r\n          onClick={this.handleShowSearch}\r\n          value={value}\r\n        />\r\n        {(searching || animating) && <Button\r\n          key=\"hide\"\r\n          id=\"documentation-search-hide\"\r\n          icon\r\n          onClick={this.handleHideSearch}>\r\n          close\r\n        </Button>}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nclass Button extends Component {\r\n  render() {\r\n    const { label = 'The button text!!!' } = this.props;\r\n    return (\r\n      <button { ...this.props } >\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Button };","import React, { Component, Fragment } from 'react';\r\nimport logo from './logo.svg';\r\nimport './app.scss';\r\nimport { Toolbar } from 'react-md';\r\nimport { PureSearch } from 'components/search';\r\nimport { Button } from 'components/button';\r\n// import { executeLogin } from 'api';\r\n\r\nclass App extends Component {\r\n\r\n  onSearch = (search) => {\r\n    this.setState({ search });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // <div className=\"App\">\r\n      //   <header className=\"App-header\">\r\n      //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      //     <p>\r\n      //       Edit <code>src/app.js</code> and save to reload.\r\n      //     </p>\r\n      //     <Button onClick={() => executeLogin()} />\r\n      //     <a\r\n      //       className=\"App-link\"\r\n      //       href=\"https://reactjs.org\"\r\n      //       target=\"_blank\"\r\n      //       rel=\"noopener noreferrer\"\r\n      //     >\r\n      //       Learn React\r\n      //     </a>\r\n      //   </header>\r\n      // </div>\r\n      <Fragment>\r\n        <Toolbar\r\n          colored\r\n          fixed\r\n          actions={<PureSearch onSearch={this.onSearch} />}\r\n          title=\"react-app\"\r\n        />\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <p>\r\n              Edit <code>src/app.js</code> and save to reload.\r\n            </p>\r\n            <Button\r\n              onClick={() => {\r\n                console.log('Test'); // eslint-disable-line\r\n              }}\r\n            />\r\n            <a\r\n              className=\"App-link\"\r\n              href=\"https://reactjs.org\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Learn React\r\n            </a>\r\n          </header>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { stringify as toQueryString } from 'querystring';\r\n\r\nconst getRandomStr = (length) => {\r\n  var text = '';\r\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return text;\r\n};\r\n\r\nconst getUrlParam = (variable) => {\r\n  var query = window.location.search.substring(1);\r\n  var vars = query.split('&');\r\n  for (var i = 0; i < vars.length; i++) {\r\n    var pair = vars[i].split('=');\r\n    if (decodeURIComponent(pair[0]) == variable) {\r\n      return decodeURIComponent(pair[1]);\r\n    }\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport { getRandomStr, getUrlParam, toQueryString };","/* eslint-disable */\r\nimport { API_URL, TOKEN_EXCHANGE_SERVER_URL, CLIENT_ID, REDIRECT_URL, SCOPE } from './api-variables';\r\nimport { getRandomStr, toQueryString } from 'utils';\r\nimport axios from 'axios';\r\nimport { Promise } from 'rsvp';\r\n\r\nconst executeLogin = () => {\r\n  var state = getRandomStr(16);\r\n  const queryString = toQueryString({\r\n    response_type: 'code',\r\n    client_id: CLIENT_ID,\r\n    scope: SCOPE,\r\n    redirect_uri: REDIRECT_URL,\r\n    state: state\r\n  });\r\n\r\n  // TODO: save cookie/localStorage\r\n  // res.cookie(stateKey, state);\r\n\r\n  window.open(API_URL + queryString, '_self');\r\n};\r\n\r\nconst exchangeTokenPromise = (code = '') => {\r\n  return axios.post(`${TOKEN_EXCHANGE_SERVER_URL}/exchange`, { code })\r\n    .then(function (res) {\r\n      console.log(res);\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nconst refreshTokenPromise = () => {\r\n  return new Promise((resolve, reject) => {\r\n    return axios.post(`${TOKEN_EXCHANGE_SERVER_URL}/refresh`, { code })\r\n      .then(function (res) {\r\n        resolve(res);\r\n      })\r\n      .catch(function (err) {\r\n        reject(error);\r\n      });\r\n  })\r\n\r\n};\r\n\r\nexport { executeLogin, exchangeTokenPromise, refreshTokenPromise };","import React, { Component, Fragment } from 'react';\r\nimport { exchangeTokenPromise } from 'api';\r\nimport { getUrlParam } from 'utils';\r\n\r\nclass Callback extends Component {\r\n  componentDidMount() {\r\n    this.processLoginCallback();\r\n  }\r\n\r\n  async processLoginCallback() {\r\n    await exchangeTokenPromise(getUrlParam('code'));\r\n  }\r\n\r\n  render() {\r\n    return <Fragment></Fragment>;\r\n  }\r\n}\r\n\r\nexport default Callback;","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t// [::1] is the IPv6 localhost address.\r\n\twindow.location.hostname === '[::1]' ||\r\n\t// 127.0.0.1/8 is considered localhost for IPv4.\r\n\twindow.location.hostname.match(\r\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import 'react-app-polyfill/ie11';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\r\nimport './index.scss';\r\nimport App from './app';\r\nimport Callback from './callback';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport WebFontLoader from 'webfontloader';\r\n\r\nWebFontLoader.load({\r\n  google: {\r\n    families: ['Roboto:300,400,500,700', 'Material Icons'],\r\n  },\r\n});\r\n\r\nconst routing = (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Switch>\r\n      <Route path=\"/callback\" component={Callback} />\r\n      <Route component={App} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(routing, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}